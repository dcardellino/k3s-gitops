---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 41.5.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    fullnameOverride: prometheus
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    prometheus-node-exporter:
      fullnameOverride: node-exporter
    prometheus:
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1024Mi
          cpu: 500m
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        hosts:
          - prometheus.${SECRET_PRIVATE_DOMAIN}
        paths:
          - "/"
        pathType: ImplementationSpecific
        tls:
          - secretName: prometheus-tls-secret
            hosts:
              - prometheus.${SECRET_PRIVATE_DOMAIN}
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-sc
              resources:
                requests:
                  storage: 10Gi
        replicas: 1
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        walCompression: true
        additionalScrapeConfigs:
          - job_name: "haproxy-exporter"
            honor_timestamps: true
            static_configs:
              - targets:
                  - 192.168.180.15:9101
          - job_name: "mailcow"
            static_configs:
              - targets:
                  - 172.18.0.2:9099
            params:
              host: ["mail.${SECRET_PUBLIC_DOMAIN}"]
              apiKey: ["${SECRET_MAILCOW_API_KEY}"]
          - job_name: "node-exporter"
            honor_timestamps: true
            static_configs:
              - targets:
                  - 192.168.180.15:9100
                  - 192.168.180.21:9100
                  - 192.168.178.10:9100
                  - 172.18.0.2:9100
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 100Mi
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-sc
              resources:
                requests:
                  storage: 1Gi
      config:
        global:
          resolve_timeout: 1m
          slack_api_url: ${SECRET_SLACK_API_URL}
        receivers:
          - name: blackhole
          - name: opsgenie
            opsgenie_configs:
              - responders:
                  - id: ${SECRET_OPSGENIE_TEAM_ID}
                    type: team
                api_key: ${SECRET_OPSGENIE_API_KEY}
                send_resolved: true
          - name: 'slack-notifications'
            slack_configs:
              - send_resolved: true
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
                  {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
                    {{" "}}(
                    {{- with .CommonLabels.Remove .GroupLabels.Names }}
                      {{- range $index, $label := .SortedPairs -}}
                      {{ if $index }}, {{ end }}
                      {{- $label.Name }}="{{ $label.Value -}}"
                    {{- end }}
                  {{- end }}
                  )
                  {{- end }}
                text: >-
                  {{ range .Alerts -}}
                  *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
                  *Description:* {{ .Annotations.description }}
                  *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: 'opsgenie'
          routes:
            - receiver: 'blackhole'
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        hosts:
          - alertmanager.${SECRET_PRIVATE_DOMAIN}
        paths:
          - "/"
        pathType: ImplementationSpecific
        tls:
          - secretName: alertmanager-tls-secret
            hosts:
              - alertmanager.${SECRET_PRIVATE_DOMAIN}
    grafana:
      enabled: false
      forceDeployDashboards: true
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
