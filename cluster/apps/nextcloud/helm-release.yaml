---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 1h
  chart:
    spec:
      chart: nextcloud
      version: 2.13.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
  values:
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "homelab-tunnel.${SECRET_PUBLIC_DOMAIN}"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_token off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
          return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
          return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
          deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
          deny all;
          }
      tls:
        - secretName: nextcloud-server-tls
          hosts:
            - cloud.${SECRET_PUBLIC_DOMAIN}
    nextcloud:
      host: cloud.${SECRET_PUBLIC_DOMAIN}
      username: administrator
      password: ${SECRET_NEXTCLOUD_ADMIN_PASSWORD}
      mail:
        enabled: true
        fromAddress: admin
        domain: ${SECRET_PUBLIC_DOMAIN}
        smtp:
          host: mail.${SECRET_PUBLIC_DOMAIN}
          secure: tls
          port: 587
          name: ${SECRET_SMTP_USERNAME}
          password: ${SECRET_SMTP_PASSWORD}
      defaultConfigs:
        .htaccess: true
        apache-pretty-urls.config.php: true
        apcu.config.php: true
        apps.config.php: true
        autoconfig.php: true
        redis.config.php: true
      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://cloud.${SECRET_PUBLIC_DOMAIN}',
            'filelocking.enabled' => 'true',
            'loglevel' => '3',
            'enable_previews' => true,
          );
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
    persistence:
      enabled: true
      storageClass: synology-csi-retain
      accessMode: ReadWriteOnce
      size: 150Gi
    redis:
      enabled: false
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: nextcloud-postgresql.nextcloud.svc.cluster.local:5432
      user: nextcloud
      password: ${SECRET_NEXTCLOUD_DATABASE_PASSWORD}
      database: nextcloud
    postgresql:
      enabled: true
      postgresqlUsername: nextcloud
      postgresqlPassword: ${SECRET_NEXTCLOUD_DATABASE_PASSWORD}
      postgresqlDatabase: nextcloud
      persistence:
        enabled: true
        storageClass: synology-csi-retain
    cronjob:
      enabled: false
